{"name":"tower-query","version":"0.1.0","keywords":["sql","orm","query","database","mvc"],"main":"./index.js","dependencies":{"tower-validator":"~0.1.0","tower-program":"~0.1.0","part-each-array":"*","part-is-array":"*"},"repository":{"type":"git","url":"http://github.com/tower/query.git"},"readme":"# Tower Query API\n\nQuery anything, anywhere.\n\n## Installation\n\nnode.js:\n\n```bash\n$ npm install tower-query\n```\n\nbrowser:\n\n```bash\n$ component install tower/query\n```\n\n## Examples\n\nSelect records:\n\n```js\nvar query = require('tower-query');\n\nquery()\n  .use('memory')\n  .select('post')\n  .where('likeCount').gte(10)\n  .where('likeCount').lte(200)\n  .all(function(err, posts){\n\n  });\n```\n\nCreate record(s):\n\n```js\nquery()\n  .use('memory')\n  .select('post')\n  .create({ title: 'Foo' }, function(err, post){\n\n  });\n```\n\nOther actions `update` and `remove` work similarly.\n\nThe query delegates to adapters for these actions, which should return a `stream`-compatible API, such as a node.js `stream`, `tower-stream`, `tower-program`, or `tower-topology`. This is how `.find` looks at a lower level:\n\n```js\nquery()\n  .use('mongodb')\n  .select('post')\n  .action('find')\n  .exec()\n  .on('data', function(posts){\n\n  })\n  .on('end', function(){\n    console.log('done querying');\n  });\n```\n\n## License\n\nMIT","readmeFilename":"README.md","_id":"tower-query@0.1.0","description":"Query anything, anywhere.","dist":{"shasum":"ada0925a461a4b3ccacf173a23689beef73bcbc2","tarball":"https://registry.npmjs.org/tower-query/-/tower-query-0.1.0.tgz"},"_from":"tower-query@0.1.0","_npmVersion":"1.2.18","_npmUser":{"name":"viatropos","email":"lancejpollard@gmail.com"},"maintainers":[{"name":"viatropos","email":"lancejpollard@gmail.com"}],"directories":{},"_shasum":"ada0925a461a4b3ccacf173a23689beef73bcbc2","_resolved":"https://registry.npmjs.org/tower-query/-/tower-query-0.1.0.tgz"}